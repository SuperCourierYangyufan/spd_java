<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.spd.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.my.spd.pojo.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uId" jdbcType="INTEGER" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="typeID" jdbcType="INTEGER" property="typeid" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="produceTime" jdbcType="TIMESTAMP" property="producetime" />
    <result column="ValidityPeriod" jdbcType="TIMESTAMP" property="validityperiod" />
    <result column="ShelfLife" jdbcType="INTEGER" property="shelflife" />
    <result column="roleId" jdbcType="INTEGER" property="roleid" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="hospitalId" jdbcType="INTEGER" property="hospitalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uId, name, create_time, typeID, typeName, price, produceTime, ValidityPeriod, 
    ShelfLife, roleId, permission, address, hospitalId
  </sql>
  <select id="selectByExample" parameterType="com.my.spd.pojo.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.my.spd.pojo.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.my.spd.pojo.Goods">
    insert into goods (id, uId, name, 
      create_time, typeID, typeName, 
      price, produceTime, ValidityPeriod, 
      ShelfLife, roleId, permission, 
      address, hospitalId)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{typeid,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{producetime,jdbcType=TIMESTAMP}, #{validityperiod,jdbcType=TIMESTAMP}, 
      #{shelflife,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{permission,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{hospitalid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.my.spd.pojo.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="typeid != null">
        typeID,
      </if>
      <if test="typename != null">
        typeName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="producetime != null">
        produceTime,
      </if>
      <if test="validityperiod != null">
        ValidityPeriod,
      </if>
      <if test="shelflife != null">
        ShelfLife,
      </if>
      <if test="roleid != null">
        roleId,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="hospitalid != null">
        hospitalId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="producetime != null">
        #{producetime,jdbcType=TIMESTAMP},
      </if>
      <if test="validityperiod != null">
        #{validityperiod,jdbcType=TIMESTAMP},
      </if>
      <if test="shelflife != null">
        #{shelflife,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="hospitalid != null">
        #{hospitalid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.spd.pojo.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uId = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typeid != null">
        typeID = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.typename != null">
        typeName = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.producetime != null">
        produceTime = #{record.producetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validityperiod != null">
        ValidityPeriod = #{record.validityperiod,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shelflife != null">
        ShelfLife = #{record.shelflife,jdbcType=INTEGER},
      </if>
      <if test="record.roleid != null">
        roleId = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.permission != null">
        permission = #{record.permission,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.hospitalid != null">
        hospitalId = #{record.hospitalid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      uId = #{record.uid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      typeID = #{record.typeid,jdbcType=INTEGER},
      typeName = #{record.typename,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      produceTime = #{record.producetime,jdbcType=TIMESTAMP},
      ValidityPeriod = #{record.validityperiod,jdbcType=TIMESTAMP},
      ShelfLife = #{record.shelflife,jdbcType=INTEGER},
      roleId = #{record.roleid,jdbcType=INTEGER},
      permission = #{record.permission,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      hospitalId = #{record.hospitalid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.spd.pojo.Goods">
    update goods
    <set>
      <if test="uid != null">
        uId = #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeid != null">
        typeID = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="typename != null">
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="producetime != null">
        produceTime = #{producetime,jdbcType=TIMESTAMP},
      </if>
      <if test="validityperiod != null">
        ValidityPeriod = #{validityperiod,jdbcType=TIMESTAMP},
      </if>
      <if test="shelflife != null">
        ShelfLife = #{shelflife,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="hospitalid != null">
        hospitalId = #{hospitalid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.spd.pojo.Goods">
    update goods
    set uId = #{uid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      typeID = #{typeid,jdbcType=INTEGER},
      typeName = #{typename,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      produceTime = #{producetime,jdbcType=TIMESTAMP},
      ValidityPeriod = #{validityperiod,jdbcType=TIMESTAMP},
      ShelfLife = #{shelflife,jdbcType=INTEGER},
      roleId = #{roleid,jdbcType=INTEGER},
      permission = #{permission,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      hospitalId = #{hospitalid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>











  <select id="searchGoods" resultType="com.my.spd.pojo.Goods">
    select DISTINCT
    name,
    id,
    uId,
    create_time,
    typeID,
    typeName,
    price,
    produceTime,
    ValidityPeriod,
    ShelfLife,
    roleId,
    permission,
    address,
    hospitalId
    FROM
    goods
    <where>
      <if test="name!=null and name!=''">
        and name like <![CDATA[
            CONCAT('%',#{name},'%')
        ]]>
      </if>
      <if test="hospitalId!=null  and  hospitalId!= 0">
        and hospitalId = #{hospitalId}
      </if>
      <if test="minPrice!=null and minPrice!=0">
        and
        <![CDATA[
          price > #{minPrice}
       ]]>
      </if>
      <if test="maxPrice!=null and maxPrice!=0">
        and
        <![CDATA[
          price < #{maxPrice}
       ]]>
      </if>
       <if test="roleid == 2">
          and roleId = #{roleid} and  uid = ${uid}
       </if>
       <if test="roleid == 3">
         and ((roleId = #{roleid} and  uid = ${uid}) or roleId = 2)
       </if>
    </where>
  </select>
</mapper>